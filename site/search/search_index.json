{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Jen Smith's Portfolio Hello and thanks for visiting! I\u2019ve worked as a technical writer since 2015, beginning with user instructions for the Veterans Benefits Management System (VBMS). From there, I documented system architecture and authored SOPs for a big data initiative for the U.S. Marine Corps. Currently, I support the National Center for Biotechnology Information (NCBI) at the National Institutes of Health (NIH), where I\u2019m updating API documentation for the E-utilities. See my MkDocs Site for NCBI API Documentation My foundation in communication comes from a Master of Arts in Professional Communications, where I learned to apply ethos (credibility), pathos (empathy), and logos (logic) across both technical and creative projects. Over the years, I\u2019ve built websites, written blogs, and created marketing materials that are both user-focused and goal-driven. I rely on these core principles in all my professional writing: Clean, user-friendly visual design Clear and practical language to support content aligned with a specific user goal Site Links Work Samples Technical Writing Samples Marketing Samples Learning New Tech OpenAPI Web Crawler for YouTube Videos Let's Connect! Linkedin Email: jenniferpetroffsmith@gmail.com MkDocs Website This website is made from my GitHub repository using the MkDocs static site format.","title":"Home"},{"location":"#welcome-to-jen-smiths-portfolio","text":"Hello and thanks for visiting! I\u2019ve worked as a technical writer since 2015, beginning with user instructions for the Veterans Benefits Management System (VBMS). From there, I documented system architecture and authored SOPs for a big data initiative for the U.S. Marine Corps. Currently, I support the National Center for Biotechnology Information (NCBI) at the National Institutes of Health (NIH), where I\u2019m updating API documentation for the E-utilities. See my MkDocs Site for NCBI API Documentation My foundation in communication comes from a Master of Arts in Professional Communications, where I learned to apply ethos (credibility), pathos (empathy), and logos (logic) across both technical and creative projects. Over the years, I\u2019ve built websites, written blogs, and created marketing materials that are both user-focused and goal-driven. I rely on these core principles in all my professional writing: Clean, user-friendly visual design Clear and practical language to support content aligned with a specific user goal","title":"Welcome to Jen Smith's Portfolio"},{"location":"#site-links","text":"Work Samples Technical Writing Samples Marketing Samples Learning New Tech OpenAPI Web Crawler for YouTube Videos","title":"Site Links"},{"location":"#lets-connect","text":"Linkedin Email: jenniferpetroffsmith@gmail.com MkDocs Website This website is made from my GitHub repository using the MkDocs static site format.","title":"Let's Connect!"},{"location":"QA/","text":"MS Dynamics Quality Assurance Test Scripts Script 1 Script 2 Script 1 Part 1 As a team lead with Append permissions in the Sandbox environment From a Team page from the Email notifications tab, enable the Stale On Hold Case Notifications setting Part 2 As a CSR on the Testing Team in the Sandbox environment where the following is true: The \"Stale On Hold Case Notifications\" have been enabled (see above) There is at least one case with a status of On Hold Note: In the Sandbox environment, the automation will be run in a demo state that should send emails out for any On Hold cases not modified in 1 minute. In Production, this query will be every 30 days. Notify the Developer that you wish to begin testing this ticket Create a case Change the status of the case to On Hold Result You should receive an email within a few minutes that states, \"You have Cases that have been On Hold for 30 days or more.\" Script 2 As a CSR on the Testing Team in the Sandbox environment From My Active Cases screen, click the New Case button Create a case, save, and submit From the Update Status menu, select Mark Duplicate The New Case Update side panel opens. From the New Case Update side panel, click the field. A list of cases display. If you try to mark the current case as its own duplicate, you will receive an error. Select a different case and click the Save button Result The case becomes Read-only: Resolved and status Duplicate Return to main page","title":"MS Dynamics Quality Assurance Test Scripts"},{"location":"QA/#ms-dynamics-quality-assurance-test-scripts","text":"Script 1 Script 2","title":"MS Dynamics Quality Assurance Test Scripts"},{"location":"QA/#script-1","text":"Part 1 As a team lead with Append permissions in the Sandbox environment From a Team page from the Email notifications tab, enable the Stale On Hold Case Notifications setting Part 2 As a CSR on the Testing Team in the Sandbox environment where the following is true: The \"Stale On Hold Case Notifications\" have been enabled (see above) There is at least one case with a status of On Hold Note: In the Sandbox environment, the automation will be run in a demo state that should send emails out for any On Hold cases not modified in 1 minute. In Production, this query will be every 30 days. Notify the Developer that you wish to begin testing this ticket Create a case Change the status of the case to On Hold Result You should receive an email within a few minutes that states, \"You have Cases that have been On Hold for 30 days or more.\"","title":"Script 1"},{"location":"QA/#script-2","text":"As a CSR on the Testing Team in the Sandbox environment From My Active Cases screen, click the New Case button Create a case, save, and submit From the Update Status menu, select Mark Duplicate The New Case Update side panel opens. From the New Case Update side panel, click the field. A list of cases display. If you try to mark the current case as its own duplicate, you will receive an error. Select a different case and click the Save button Result The case becomes Read-only: Resolved and status Duplicate Return to main page","title":"Script 2"},{"location":"api/","text":"MkDocs Site for API Documentation This is a MkDocs static site designed to support API documentation, including an interactive Swagger-UI for testing. See EUtilities API Documentation - A work in Progress","title":"MkDocs Site for API Documentation"},{"location":"api/#mkdocs-site-for-api-documentation","text":"This is a MkDocs static site designed to support API documentation, including an interactive Swagger-UI for testing. See EUtilities API Documentation - A work in Progress","title":"MkDocs Site for API Documentation"},{"location":"documentation-samples/","text":"NIH NCBI Technical Writing Samples The mission of the National Center for Biotechnology Information's (NCBI) is to develop new information technologies to aid in the understanding of fundamental molecular and genetic processes that control health and disease Submission Portal Shared Submission Groups Feature ~ Published March 2025 On the Shared Submission Groups page: Wrote the Shared Submission Groups page text through collaborating with SME's Wrote the Jira stories and tasks and reviewed the developer's work for accuracy Genome Onboarding Submission Portal ~ Published August 2024 On the Genome Onboarding Submission Portal page in the What You Should Expect section, to reduce submission errors: Used visual design theory to design the layout Edited the text through collaborating with SME's to improve user guidance SRA Toolkit Wiki ~ Publishing to the SRA website scheduled for late 2025 For the SRA Tools GitHub Wiki , - Wrote guidance for a non-technicap audience on how to use command line tools to work with the SRA database. My Edited SRA Tookit Wiki Current SRA Toolkit Wiki for comparison STAT Tool ~ Publishing on hold For the NCBI STAT Tool, wrote guidance for a non-technicap audience to use a new version the STAT Tool, a tool scientist would use to determine the taxomonmy of a biological sample. The current information does not include how to download the taxonomy database. The developer team discovered some weaknesses based on my attempts to set up the tool. They decided to reorganize the toolkit. Since the project manager is no longer with the organization, the future of this work is on hold. My Edited How to Download and Use the STAT Tool Current STAT Tool documentation for comparison","title":"Tecnical Writing Samples"},{"location":"documentation-samples/#nih-ncbi-technical-writing-samples","text":"The mission of the National Center for Biotechnology Information's (NCBI) is to develop new information technologies to aid in the understanding of fundamental molecular and genetic processes that control health and disease","title":"NIH NCBI Technical Writing Samples"},{"location":"documentation-samples/#submission-portal-shared-submission-groups-feature","text":"~ Published March 2025 On the Shared Submission Groups page: Wrote the Shared Submission Groups page text through collaborating with SME's Wrote the Jira stories and tasks and reviewed the developer's work for accuracy","title":"Submission Portal Shared Submission Groups Feature"},{"location":"documentation-samples/#genome-onboarding-submission-portal","text":"~ Published August 2024 On the Genome Onboarding Submission Portal page in the What You Should Expect section, to reduce submission errors: Used visual design theory to design the layout Edited the text through collaborating with SME's to improve user guidance","title":"Genome Onboarding Submission Portal"},{"location":"documentation-samples/#sra-toolkit-wiki","text":"~ Publishing to the SRA website scheduled for late 2025 For the SRA Tools GitHub Wiki , - Wrote guidance for a non-technicap audience on how to use command line tools to work with the SRA database. My Edited SRA Tookit Wiki Current SRA Toolkit Wiki for comparison","title":"SRA Toolkit Wiki"},{"location":"documentation-samples/#stat-tool","text":"~ Publishing on hold For the NCBI STAT Tool, wrote guidance for a non-technicap audience to use a new version the STAT Tool, a tool scientist would use to determine the taxomonmy of a biological sample. The current information does not include how to download the taxonomy database. The developer team discovered some weaknesses based on my attempts to set up the tool. They decided to reorganize the toolkit. Since the project manager is no longer with the organization, the future of this work is on hold. My Edited How to Download and Use the STAT Tool Current STAT Tool documentation for comparison","title":"STAT Tool"},{"location":"resume/","text":"Resume I am a Senior Technical Writer with 10 years of experience writing clear, comprehensive, and accessible documentation. I have a Master\u2019s degree in Professional Communications with a focus on rhetoric and visual communication. See my technical writing samples See my organizational communications samples See my LinkedIn I am motivated to help end users achieve their goals by creating content that is human-centered, is visually appealing, and enables clients to effectively use the technology. Education Master of Arts in Professional Communications (MAPC), Clemson University Designing the South Carolina Botanical Gardens website applying visual and rhetorical design theories Teaching and writing the curriculum for 200-level desktop publishing course including visual design theory Course Work in Internet Programming, Trident Technical College Learned and practiced SQL and relational database theory Wrote JavaScript to design web pages Wrote .asp code and called database information to create interactive web pages Bachelor of Arts in Language and International Trade, Clemson University Professional Certifications AWS Cloud Practitioner (06/2024) SAFe 4 Product Owner/Product Manager Certification (12/2019) Work Experience 07/2022 - Present Computercraft, Washington, D.C. (remote) Senior Technical Writer - National Institutes of Health National Center for Biotechnology Information Improving user guidance for the Shared Submission Groups feature and Genome Onboarding Submission Portal by: Collaborating with the project owner and managers Simplifying instructions Improving the page layout Re-organizing the E-Utilities documentation including API information from book format to website format Documenting the architecture for the largest publicly available repository of high throughput sequencing data (SRA) Updating user instructions on how to upload SRA data on prem and via GCP and AWS Writing the guidance for the STAT Analysis tool by creating a Linux machine, then installing and learning the tool Writing guidance in GitHub on how to download, install, and use SRA Toolkit 08/2020 - 07/2022 Scientific Research Corporation, Charleston, SC (remote) Senior Technical Writer III - US Marine Corps Data as a Service (DaaS) Initiative Technical Writing Efforts: Working with developers to learn microservices and write standard operating procedures for the big data migration project Drawing network, architecture, and data flow diagrams Creating a wireframe to represent development Developing document templates for deliverables Working with Data Scientists and Data Engineers and helping to design dashboards for performance monitoring and data governance pipelines to support the DaaS Initiative Using Python and NiFi to import, clean and extract, transform, and load (ETL) data from Naval databases Using Kafka to distribute data and Elasticsearch to import and prepare data for search, analysis, and visualization Project Management Efforts: Identifying, analyzing, and caputuring project requirements using Jira and Confluence Working with our customer and Product Owner to clarify goals Managing requirements using Jira and Confluence Customer Support Efforts: Writing documentation for and assisting customers with accessing and using the system 06/2015 - 08/2020 Booz Allen Hamilton, Charleston, SC Technical Writer - VBMS (Veteran Benefits Management System) Production Operations (ProdOps) Writing new content and creating new diagrams to capture the move to Amazon Web Services by researching technical documents and interviewing subject matter experts Creating seven instructional documents for collecting and reporting ProdOps data Expediting document delivery by independently collecting data and writing operational issues Developing queries to collect data for a monthly security changes document Improving data collection process by moving from biweekly to daily data collection 06/2010 - 08/2014 College of Charleston, Charleston, SC Technology Consultant - School of Languages, Cultures, and World Affairs (LCWA) Technology Resource Center Redesigning the Center\u2019s website and creating new websites for the School\u2019s programs using a user-focused approach Writing strategic copy on a weekly basis for websites, blogs, promotional events, and programs Teaching students and professors how to use software programs Creating instructional videos to prepare students for online language testing Managing the LCWA Technology Resource Center Administering a SaaS program - managing professor and student accounts and assigning permissions 07/2009 - 11/2009 Alliance Software Corporation, Charleston, SC Project Manager Coordinating training and instructing clients via WebEx to use customer relationship management software Writing the Help documentation to use the CRM software Developing a proposal for the company\u2019s website to promote the company's product by showing its advantages Skill Sets and Knowledge Areas Hard Skills Technical writing Research CLI SharePoint Confluence Jira Relational Databases SQL Linux Parts of GCP and AWS Agile and Scrum Designing Websites GitHub Markdown MkDocs YAML Draw.io Photoshop VSCode Strategic Marketing Internal Communications Soft Skills Collaborating Planning Brainstorming Looking for patterns Good with ambiguity Learning Self-starter Team player Coaching Evaluating Identifying problems Developing solutions Organizing Sense of Humor Knowledge Areas Python Apache NiFi ETL Big Data Systems Kafka JSON Avro JavaScript Custom Software Development SDLC SaaS Vertical And Unstructured Databases CRMs OpenAPI","title":"Resume"},{"location":"resume/#resume","text":"I am a Senior Technical Writer with 10 years of experience writing clear, comprehensive, and accessible documentation. I have a Master\u2019s degree in Professional Communications with a focus on rhetoric and visual communication. See my technical writing samples See my organizational communications samples See my LinkedIn I am motivated to help end users achieve their goals by creating content that is human-centered, is visually appealing, and enables clients to effectively use the technology.","title":"Resume"},{"location":"resume/#education","text":"Master of Arts in Professional Communications (MAPC), Clemson University Designing the South Carolina Botanical Gardens website applying visual and rhetorical design theories Teaching and writing the curriculum for 200-level desktop publishing course including visual design theory Course Work in Internet Programming, Trident Technical College Learned and practiced SQL and relational database theory Wrote JavaScript to design web pages Wrote .asp code and called database information to create interactive web pages Bachelor of Arts in Language and International Trade, Clemson University","title":"Education"},{"location":"resume/#professional-certifications","text":"AWS Cloud Practitioner (06/2024) SAFe 4 Product Owner/Product Manager Certification (12/2019)","title":"Professional Certifications"},{"location":"resume/#work-experience","text":"","title":"Work Experience"},{"location":"resume/#072022-present-computercraft-washington-dc-remote","text":"Senior Technical Writer - National Institutes of Health National Center for Biotechnology Information Improving user guidance for the Shared Submission Groups feature and Genome Onboarding Submission Portal by: Collaborating with the project owner and managers Simplifying instructions Improving the page layout Re-organizing the E-Utilities documentation including API information from book format to website format Documenting the architecture for the largest publicly available repository of high throughput sequencing data (SRA) Updating user instructions on how to upload SRA data on prem and via GCP and AWS Writing the guidance for the STAT Analysis tool by creating a Linux machine, then installing and learning the tool Writing guidance in GitHub on how to download, install, and use SRA Toolkit","title":"07/2022 - Present &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; Computercraft, Washington, D.C. (remote)"},{"location":"resume/#082020-072022-scientific-research-corporation-charleston-sc-remote","text":"Senior Technical Writer III - US Marine Corps Data as a Service (DaaS) Initiative Technical Writing Efforts: Working with developers to learn microservices and write standard operating procedures for the big data migration project Drawing network, architecture, and data flow diagrams Creating a wireframe to represent development Developing document templates for deliverables Working with Data Scientists and Data Engineers and helping to design dashboards for performance monitoring and data governance pipelines to support the DaaS Initiative Using Python and NiFi to import, clean and extract, transform, and load (ETL) data from Naval databases Using Kafka to distribute data and Elasticsearch to import and prepare data for search, analysis, and visualization Project Management Efforts: Identifying, analyzing, and caputuring project requirements using Jira and Confluence Working with our customer and Product Owner to clarify goals Managing requirements using Jira and Confluence Customer Support Efforts: Writing documentation for and assisting customers with accessing and using the system","title":"08/2020 - 07/2022 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; Scientific Research Corporation, Charleston, SC (remote)"},{"location":"resume/#062015-082020-booz-allen-hamilton-charleston-sc","text":"Technical Writer - VBMS (Veteran Benefits Management System) Production Operations (ProdOps) Writing new content and creating new diagrams to capture the move to Amazon Web Services by researching technical documents and interviewing subject matter experts Creating seven instructional documents for collecting and reporting ProdOps data Expediting document delivery by independently collecting data and writing operational issues Developing queries to collect data for a monthly security changes document Improving data collection process by moving from biweekly to daily data collection","title":"06/2015 - 08/2020 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; Booz Allen Hamilton, Charleston, SC"},{"location":"resume/#062010-082014-college-of-charleston-charleston-sc","text":"Technology Consultant - School of Languages, Cultures, and World Affairs (LCWA) Technology Resource Center Redesigning the Center\u2019s website and creating new websites for the School\u2019s programs using a user-focused approach Writing strategic copy on a weekly basis for websites, blogs, promotional events, and programs Teaching students and professors how to use software programs Creating instructional videos to prepare students for online language testing Managing the LCWA Technology Resource Center Administering a SaaS program - managing professor and student accounts and assigning permissions","title":"06/2010 - 08/2014 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; College of Charleston, Charleston, SC"},{"location":"resume/#072009-112009-alliance-software-corporation-charleston-sc","text":"Project Manager Coordinating training and instructing clients via WebEx to use customer relationship management software Writing the Help documentation to use the CRM software Developing a proposal for the company\u2019s website to promote the company's product by showing its advantages","title":"07/2009 - 11/2009 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; Alliance Software Corporation, Charleston, SC"},{"location":"resume/#skill-sets-and-knowledge-areas","text":"","title":"Skill Sets and Knowledge Areas"},{"location":"visuals/","text":"Marketing Samples Before technical writing, I designed posters, wrote blog posts, created websites, wrote and designed newsletters, and edited magazines. Here are some samples: Proposals Promote a CRM SoftWare for Theater Companies Goal: Increase sales of CRM software by showing the advantages of using Alliance Software Corporation's services. Promote a Real Estate Company that Specializes in Short Sales Goal: Assure potential customers of more relaxed experience when dealing with real estate short sales. Print Journal of the Louisiana State Medical Society Designed the covers and page layouts Edited the text Spontaneous Regression of Cervical Disc Hernication Lessons Learned from Dirty Diapers Malicious Prosecution Physician Assisted Suicide Theater Banner Goal: Entice the General Public to Come to the Play Goal: Provide an idea of the play's plot BTW, the play won a Best of Charleston Award that year! Websites MkDocs Website This website is made from my GitHub repository using the MkDocs static site format. Previous Websites These sites represent professional communications work I did prior to 2014. Click to visit! 2010 2012 2014","title":"Marketing Samples"},{"location":"visuals/#marketing-samples","text":"Before technical writing, I designed posters, wrote blog posts, created websites, wrote and designed newsletters, and edited magazines. Here are some samples:","title":"Marketing Samples"},{"location":"visuals/#proposals","text":"","title":"Proposals"},{"location":"visuals/#promote-a-crm-software-for-theater-companies","text":"Goal: Increase sales of CRM software by showing the advantages of using Alliance Software Corporation's services.","title":"Promote a CRM SoftWare for Theater Companies"},{"location":"visuals/#promote-a-real-estate-company-that-specializes-in-short-sales","text":"Goal: Assure potential customers of more relaxed experience when dealing with real estate short sales.","title":"Promote a Real Estate Company that Specializes in Short Sales"},{"location":"visuals/#print","text":"","title":"Print"},{"location":"visuals/#journal-of-the-louisiana-state-medical-society","text":"Designed the covers and page layouts Edited the text Spontaneous Regression of Cervical Disc Hernication Lessons Learned from Dirty Diapers Malicious Prosecution Physician Assisted Suicide","title":"Journal of the Louisiana State Medical Society"},{"location":"visuals/#theater-banner","text":"Goal: Entice the General Public to Come to the Play Goal: Provide an idea of the play's plot BTW, the play won a Best of Charleston Award that year!","title":"Theater Banner"},{"location":"visuals/#websites","text":"","title":"Websites"},{"location":"visuals/#mkdocs-website","text":"This website is made from my GitHub repository using the MkDocs static site format.","title":"MkDocs Website"},{"location":"visuals/#previous-websites","text":"These sites represent professional communications work I did prior to 2014. Click to visit! 2010 2012 2014","title":"Previous Websites"},{"location":"webcrawler/","text":"Web Crawler for YouTube Videos Using a book from my library called, Mining Social Media , I learned how to create a .csv of YouTube videos. Coincidentally on my work project, they wanted to know how many videos our project ( NCBI Sequence Read Archive ) has on YouTube. I adapted the code to produce the .csv. nlm_sra.py SRA List of YouTube Videos.csv","title":"Web Crawler for YouTube Videos"},{"location":"webcrawler/#web-crawler-for-youtube-videos","text":"Using a book from my library called, Mining Social Media , I learned how to create a .csv of YouTube videos. Coincidentally on my work project, they wanted to know how many videos our project ( NCBI Sequence Read Archive ) has on YouTube. I adapted the code to produce the .csv. nlm_sra.py SRA List of YouTube Videos.csv","title":"Web Crawler for YouTube Videos"},{"location":"yaml/","text":"eutils.yml A Work in Progress I have been learning about documenting APIs. I wrote this yaml for NCBI EUtilities API documentation. See the EUtilies documentation in progress. See this yaml in action - EUtilities Explorer openapi: \"3.0.3\" info: title: E-Utilities - OpenAPI 3.0 description: |- This is a sample E-Utilities Server based on the OpenAPI 3.0 specification. #termsOfService: https://example.com/terms contact: email: jenniferpetroffsmith@gmail.com license: name: Apache 2.0 url: http://www.apache.org/licenses/LICENSE-2.0.html version: 1.0.11 externalDocs: description: A General Introduction to the E-utilities url: https://www.ncbi.nlm.nih.gov/books/NBK25497/ servers: url: https://eutils.ncbi.nlm.nih.gov/entrez/eutils description: base URL tags: name: esearch description: Finds text in one NCBI databases externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/esearch.md name: esummary description: Returns document summaries for each UID externalDocs: description: Description of ESummary url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/esummary.md name: einfo description: Retrieves information and statistics about a single database externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/einfo.md name: egquery description: Searches a text query in all NCBI databases and returns the number of results [IN THE FORM OF UID PERHAPS?] in each database externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/egquery.md name: efetch description: Retrieves on screen or downloads full records for each UID externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/efetch.md name: elink description: Retrieves UIDs for related or linked records, or LinkOut URLs (URLs that link outside NCBI databases) externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/elink.md name: espell description: Retrieves spelling suggestions for a text query externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/espell.md name: ecitmatch description: Searches PubMed for a series of citation strings externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/ecitmatch.md paths: /esearch.fcgi: get: tags: - esearch summary: queries for text in a single database description: Multiple search terms can be provided with comma separated strings operationId: findtextByDatabase parameters: - name: db in: query description: target database required: true explode: true schema: type: string - name: term in: query description: the term or phrase to search for required: true explode: true schema: type: string - $ref: '#/components/parameters/retmode' - $ref: '#/components/parameters/rettype' responses: \"200\": description: ESummary downloaded content: application/xml: schema: type: integer \"401\": description: Failed /esummary.fcgi: get: tags: - esummary summary: Downloads document summaries of one ore more (comma separated) UIDs for a single database (db) description: Downloads document summaries of one ore more (comma separated) UIDs for a single database (db) or if information was saved to the History server in a previous query, for that set or UIDs stored on History Server operationId: docsumByUID parameters: - name: db in: query description: target database required: true explode: true schema: type: string - name: id in: query description: the UID required: true explode: true schema: type: integer - name: usehistory in: query description: save results to history server | use with WebEnv required: false explode: true schema: type: boolean - name: WebEnv in: query description: saved session string from esearch, epost, or elink | Needs query_key and usehistory required: false explode: false schema: type: string - name: query_key in: query description: integer query key returned by previouse esearch, epost, or elink | Needs WebEnv required: false schema: type: integer - $ref: '#/components/parameters/WebEnv' - $ref: '#/components/parameters/usehistory' - $ref: '#/components/parameters/retmax' - $ref: '#/components/parameters/datetype' - $ref: '#/components/parameters/strand' - $ref: '#/components/parameters/seq_start' - $ref: '#/components/parameters/seq_stop' - $ref: '#/components/parameters/complexity' - $ref: '#/components/parameters/retstart' - $ref: '#/components/parameters/version' - $ref: '#/components/parameters/rettype' - name: retmode in: query description: Specifies the method used to sort UIDs in the ESearch output. explode: false schema: type: array items: type: string enum: # enum restricts to specific values BUT THIS IS FOR db=pubmed MED ONLY - pub_date - Author - JournalName - relevance responses: \"200\": description: ESummary downloaded, originally designed for PubMed articles, but has been expanded to to other databases where the fields of the document summary vary by database content: application/xml: schema: type: string application/json: schema: type: string text/html: schema: type: string text/*: schema: type: string \"401\": description: Failed /efetch.fcgi: get: tags: - efetch summary: Returns on screen or downloads full records in a variety of formats from an UID or list of comma-separate UIDs. description: Returns on screen or downloads full records in a variety of formats from an UID or list of comma-separate UIDs or set of UIDs from history server. Not all databases are supported. EFetch can retrieve GI numbers records by including their accession.version identifier in the id parameter. For example - efetch.fcgi?db={database}&id={uid_list}&rettype={retrieval_type}&retmode={retrieval_mode}. For sequence databases (nuccore, popset, protein), the UID list may be a mixed list of GI numbers and accession.version identifiersThere is no set maximum for the number of UIDs that can be passed to EFetch, but if more than about 200 UIDs are to be provided, the request should be made using the HTTP POST method operationId: efetchdwnload parameters: - name: db in: query description: target database required: true explode: true schema: type: string - name: id in: query description: the UID required: true explode: true schema: type: string - $ref: '#/components/parameters/WebEnv' - $ref: '#/components/parameters/usehistory' - $ref: '#/components/parameters/retmax' - $ref: '#/components/parameters/datetype' - $ref: '#/components/parameters/strand' - $ref: '#/components/parameters/seq_start' - $ref: '#/components/parameters/seq_stop' - $ref: '#/components/parameters/complexity' - $ref: '#/components/parameters/retmode' - $ref: '#/components/parameters/rettype' response: \"200\": description: EFetch records, results vary by databases's fields. content: application/xml: schema: type: string application/json: schema: type: string text/html: schema: type: string text/*: schema: type: string '400': description: limitations vary with database. '404': description: User not found /egquery.fcgi: get: tags: - egquery summary: Entrez text query in all Entrez databases description: Searches a text query in all Entrez databases and returns the number of results for the query in each database. All special characters must be URL encoded. Spaces may be replaced by '+' signs. parameters: - name: term in: query description: Entrez text query explode: true required: false schema: type: string responses: '200': description: Ok /einfo.fcgi: get: tags: - einfo summary: Provides a list of the names of all valid Entrez databases or Provides statistics for a single database description: Provides a list of the names of all valid Entrez databases or when given a database, provides database statistics including lists of indexing fields and available link names #operationID: esummary has this field but einfo does not - may be why it is not working parameters: - name: db in: query description: target database about which to gather statistics explode: false required: false schema: type: string - name: version in: query description: Used to specify version 2.0 EInfo XML. The only supported value is \u20182.0\u2019. explode: false required: false schema: type: string example: link: summary: \"See detailed information about version parametmer with respect to EInfo\" externalValue: https://github.com/jenpetsmit/eutilities/blob/main/eutils/einfo.md security: - api_key: [] responses: '200': description: Ok /elink.fcgi: get: tags: - elink summary: Retrieves UIDs for related or linked records, or LinkOut URLs. description: Provides a list of the names of all valid Entrez databases or when given a database, provides database statistics including lists of indexing fields and available link names parameters: - name: db in: query description: Target database from which to retrieve UIDs. This is the origin database of the link operation. If db and dbfrom are set to the same database value, then ELink will return computational neighbors within that database. explode: true required: false schema: type: string - name: dbfrom in: query description: Source database with the input UIDs explode: false required: true schema: type: string - name: cmd in: query description: ELink command mode explode: false required: true schema: type: array items: type: string enum: # enum restricts to specific values - neighbor - neighbor_score - neighbot_history - acheck - ncheck - lcheck - llinks - llinkslib - prlinks - name: id in: query description: A single UID or a comma-separated UID list from the same database (dbfrom) explode: true required: false schema: type: string example: https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=nuccore&db=nuccore&id=34577062 - $ref: '#/components/parameters/query_key' - $ref: '#/components/parameters/WebEnv' - $ref: '#/components/parameters/retmode' - $ref: '#/components/parameters/idtype' # add this to components - $ref: '#/components/parameters/linkname' # add this to components - $ref: '#/components/parameters/term' - name: holding in: query description: Only URLs for the LinkOut provider specified by holding will be returned. The value provided to holding should be the abbreviation of the LinkOut provider's name found in the <NameAbbr> tag of the ELink XML output when cmd is set to llinks or llinkslib. The holding parameter only functions when cmd is set to llinks or llinkslib. explode: true required: false schema: type: string - $ref: '#/components/parameters/datetype' - $ref: '#/components/parameters/reldate' - $ref: '#/components/parameters/mindate' - $ref: '#/components/parameters/maxdate' responses: '200': description: \"200 response It works\" content: # Response body application/xml: schema: type: object properties: id: type: string /espell.fcgi: get: tags: - espell summary: Retrieves UIDs for related or linked records, or LinkOut URLs. description: Provides a list of the names of all valid Entrez databases or when given a database, provides database statistics... parameters: - name: db in: query description: Target database to search explode: true required: true schema: type: string - name: term in: query description: Entrez text query... explode: true required: true schema: type: string responses: '200': description: Successful response with spelling suggestions content: application/xml: schema: type: object properties: spelling: type: string description: Suggested spelling application/json: schema: type: object properties: spelling: type: string description: Suggested spelling /ecitmatch.fcgi: get: tags: - ecitmatch summary: Retrieves PubMed IDs (PMIDs) that correspond to a set of input citation strings. description: Retrieves PubMed IDs (PMIDs) that correspond to a set of input citation strings. parameters: - name: db in: query description: Target database to search. The only supported value is pubmed. Example db=pubmed explode: true required: true schema: type: string enum: - pubmed - name: rettype in: query description: ERetrieval type. The only supported value is \u2018xml\u2019. example retye=xml explode: true required: true schema: type: string - name: bdata in: query description: Citation strings. Each input citation must be represented by a citation string in the following format- journal_title|year|volume|first_page|author_name|your_key| explode: true required: true schema: type: string responses: '200': description: 200 response It works '401': description: database must be pubmed, example, db=pubmed components: parameters: db: name: database in: query description: the abbreviated name of the NCBI database to be queried. required: false explode: true schema: type: string term: name: term in: query description: the term or phrase for which to search required: true explode: true schema: type: string usehistory: name: Use history in: query description: saves results to history server required: false explode: true schema: type: string WebEnv: name: Web Environment in: query description: saved session string from esearch, epost, or elink required: false explode: false schema: type: string query_key: name: Query key in: query description: integer query key returned by previouse esearch, epost, or elink required: false explode: false schema: type: integer retmax: name: Retrival maximum in: query description: Total number of UIDs from the retrieved set to be shown in the XML output (default=20). By default, ESearch only includes the first 20 UIDs retrieved in the XML output. If usehistory is set to 'y', the remainder of the retrieved set will be stored on the History server; otherwise these UIDs are lost. Increasing retmax allows more of the retrieved UIDs to be included in the XML output, up to a maximum of 10,000 records. required: false explode: false schema: type: string retstart: name: Retrival start UID in: query description: Sequential index of the first UID in the retrieved set to be shown in the XML output (default=0, corresponding to the first record of the entire set). This parameter can be used in conjunction with retmax to download an arbitrary subset of UIDs retrieved from a search. required: false explode: false schema: type: integer rettype: name: Retrival Type in: query description: Specifies the type of return but options vary by database, for example flat file, FASTA, EST, or accession, abstract or MEDLINE from PubMed, or GenPept or FASTA from protein. See the Parameters web page for a comlete list. explode: false schema: type: string retmode: name: Retrival mode in: query description: Determines the format of the returned output. The default value is xml for ESearch XML; json is also supported to return output in JSON format; efetch supports remode-text. explode: false schema: type: string sort: name: Retrival mode in: query description: Specifies the method used to sort UIDs in the ESearch output. required: false explode: false schema: type: array items: type: string enum: - pub_date - Author - JournalName - relevance strand: name: strand in: query description: Strand of DNA to retrieve. Available values are \"1\" for the plus strand and \"2\" for the minus strand. required: false explode: false schema: type: integer example: db=nuccore&id=21614549&strand=1&seq_start=1&seq_stop=100&rettype=fasta&retmode=text seq_start: name: sequence start in: query description: First sequence base to retrieve. The value should be the integer coordinate of the first desired base, with \"1\" representing the first base of the sequence. required: false explode: false schema: type: integer example: db=nuccore&id=21614549&strand=1&seq_start=1&seq_stop=100&rettype=fasta&retmode=text seq_stop: name: seq_stop # in: query description: Last sequence base to retrieve. The value should be the integer coordinate of the last desired base, with \"1\" representing the first base of the sequence. schema: type: integer example: db=nuccore&id=21614549&strand=1&seq_start=1&seq_stop=100&rettype=fasta&retmode=text complexity: name: complexity in: query description: | Complexity of sequence: - 0: entire blob - 1: bioseq - 2: minimal bioseq-set - 3: minimal nuc-prot - 4: minimal pub-set schema: type: string enum: - 0 - 1 - 2 - 3 - 4 version: name: version in: query required: false description: Used to specify version 2.0 ESummary XML. When present, ESummary will return version 2.0 DocSum XML that is unique to each Entrez database and that often contains more data than the default DocSum XML. schema: type: string example: https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=11850928,11482001&version=2.0 idtype: name: idtype in: query required: false description: Specifies the type of identifier to return for sequence databases (nuccore, popset, protein). By default, ELink returns GI numbers in its output. If idtype is set to \u2018acc\u2019, ELink will return accession.version identifiers rather than GI numbers. schema: type: string linkname: name: linkname in: query required: false explode: false description: Name of the Entrez link to retrieve. Every link in Entrez is given a name of the form dbfrom_db_subset schema: type: string example: Find snps with genotype data linked to genes. https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=gene&db=snp&id=93986&linkname=gene_snp_genegenotype datetype: name: datetype in: query required: false explode: false description: Type of date used to limit a link operation. The allowed values vary between Entrez databases, but common values are 'mdat' (modification date), 'pdat' (publication date) and 'edat' (Entrez date). Generally an Entrez database will have only two allowed values for datetype. schema: type: string reldate: name: reldate in: query required: false explode: false description: When reldate is set to an integer n, ELink returns only those items that have a date specified by datetype within the last n days. schema: type: string mindate: name: mindate in: query required: false explode: false description: Beginning of date range used to limit a link operation by the date specified by datetype. Mindate and maxdate must be used together to specify an arbitrary date range. The general date format is YYYY/MM/DD, and these variants are also allowed - YYYY, YYYY/MM. schema: type: string maxdate: name: maxdate in: query required: false explode: false description: End of date range used to limit a link operation by the date specified by datetype. Mindate and maxdate must be used together to specify an arbitrary date range. The general date format is YYYY/MM/DD, and these variants are also allowed- YYYY, YYYY/MM. schema: type: string responses: 205: description: all good IllegalInput: description: Illegal input for operation. GeneralError: description: General Error MissingParameter: description: Either usehistory, query_key, retmax 405: description: Invalid status value content: application/xml: schema: type: array items: enum: - placed - approved - delivered securitySchemes: api_key: description: Only needed if access to E-Utilities is more than three requests per second. Users can get an API key from their NCBI account, from the Settings page. type: apiKey name: api_key in: header","title":"eutils.yml"},{"location":"yaml/#eutilsyml","text":"A Work in Progress I have been learning about documenting APIs. I wrote this yaml for NCBI EUtilities API documentation. See the EUtilies documentation in progress. See this yaml in action - EUtilities Explorer openapi: \"3.0.3\" info: title: E-Utilities - OpenAPI 3.0 description: |- This is a sample E-Utilities Server based on the OpenAPI 3.0 specification. #termsOfService: https://example.com/terms contact: email: jenniferpetroffsmith@gmail.com license: name: Apache 2.0 url: http://www.apache.org/licenses/LICENSE-2.0.html version: 1.0.11 externalDocs: description: A General Introduction to the E-utilities url: https://www.ncbi.nlm.nih.gov/books/NBK25497/ servers: url: https://eutils.ncbi.nlm.nih.gov/entrez/eutils description: base URL tags: name: esearch description: Finds text in one NCBI databases externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/esearch.md name: esummary description: Returns document summaries for each UID externalDocs: description: Description of ESummary url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/esummary.md name: einfo description: Retrieves information and statistics about a single database externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/einfo.md name: egquery description: Searches a text query in all NCBI databases and returns the number of results [IN THE FORM OF UID PERHAPS?] in each database externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/egquery.md name: efetch description: Retrieves on screen or downloads full records for each UID externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/efetch.md name: elink description: Retrieves UIDs for related or linked records, or LinkOut URLs (URLs that link outside NCBI databases) externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/elink.md name: espell description: Retrieves spelling suggestions for a text query externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/espell.md name: ecitmatch description: Searches PubMed for a series of citation strings externalDocs: description: Find out more url: https://github.com/jenpetsmit/eutilities/blob/main/eutils/ecitmatch.md paths: /esearch.fcgi: get: tags: - esearch summary: queries for text in a single database description: Multiple search terms can be provided with comma separated strings operationId: findtextByDatabase parameters: - name: db in: query description: target database required: true explode: true schema: type: string - name: term in: query description: the term or phrase to search for required: true explode: true schema: type: string - $ref: '#/components/parameters/retmode' - $ref: '#/components/parameters/rettype' responses: \"200\": description: ESummary downloaded content: application/xml: schema: type: integer \"401\": description: Failed /esummary.fcgi: get: tags: - esummary summary: Downloads document summaries of one ore more (comma separated) UIDs for a single database (db) description: Downloads document summaries of one ore more (comma separated) UIDs for a single database (db) or if information was saved to the History server in a previous query, for that set or UIDs stored on History Server operationId: docsumByUID parameters: - name: db in: query description: target database required: true explode: true schema: type: string - name: id in: query description: the UID required: true explode: true schema: type: integer - name: usehistory in: query description: save results to history server | use with WebEnv required: false explode: true schema: type: boolean - name: WebEnv in: query description: saved session string from esearch, epost, or elink | Needs query_key and usehistory required: false explode: false schema: type: string - name: query_key in: query description: integer query key returned by previouse esearch, epost, or elink | Needs WebEnv required: false schema: type: integer - $ref: '#/components/parameters/WebEnv' - $ref: '#/components/parameters/usehistory' - $ref: '#/components/parameters/retmax' - $ref: '#/components/parameters/datetype' - $ref: '#/components/parameters/strand' - $ref: '#/components/parameters/seq_start' - $ref: '#/components/parameters/seq_stop' - $ref: '#/components/parameters/complexity' - $ref: '#/components/parameters/retstart' - $ref: '#/components/parameters/version' - $ref: '#/components/parameters/rettype' - name: retmode in: query description: Specifies the method used to sort UIDs in the ESearch output. explode: false schema: type: array items: type: string enum: # enum restricts to specific values BUT THIS IS FOR db=pubmed MED ONLY - pub_date - Author - JournalName - relevance responses: \"200\": description: ESummary downloaded, originally designed for PubMed articles, but has been expanded to to other databases where the fields of the document summary vary by database content: application/xml: schema: type: string application/json: schema: type: string text/html: schema: type: string text/*: schema: type: string \"401\": description: Failed /efetch.fcgi: get: tags: - efetch summary: Returns on screen or downloads full records in a variety of formats from an UID or list of comma-separate UIDs. description: Returns on screen or downloads full records in a variety of formats from an UID or list of comma-separate UIDs or set of UIDs from history server. Not all databases are supported. EFetch can retrieve GI numbers records by including their accession.version identifier in the id parameter. For example - efetch.fcgi?db={database}&id={uid_list}&rettype={retrieval_type}&retmode={retrieval_mode}. For sequence databases (nuccore, popset, protein), the UID list may be a mixed list of GI numbers and accession.version identifiersThere is no set maximum for the number of UIDs that can be passed to EFetch, but if more than about 200 UIDs are to be provided, the request should be made using the HTTP POST method operationId: efetchdwnload parameters: - name: db in: query description: target database required: true explode: true schema: type: string - name: id in: query description: the UID required: true explode: true schema: type: string - $ref: '#/components/parameters/WebEnv' - $ref: '#/components/parameters/usehistory' - $ref: '#/components/parameters/retmax' - $ref: '#/components/parameters/datetype' - $ref: '#/components/parameters/strand' - $ref: '#/components/parameters/seq_start' - $ref: '#/components/parameters/seq_stop' - $ref: '#/components/parameters/complexity' - $ref: '#/components/parameters/retmode' - $ref: '#/components/parameters/rettype' response: \"200\": description: EFetch records, results vary by databases's fields. content: application/xml: schema: type: string application/json: schema: type: string text/html: schema: type: string text/*: schema: type: string '400': description: limitations vary with database. '404': description: User not found /egquery.fcgi: get: tags: - egquery summary: Entrez text query in all Entrez databases description: Searches a text query in all Entrez databases and returns the number of results for the query in each database. All special characters must be URL encoded. Spaces may be replaced by '+' signs. parameters: - name: term in: query description: Entrez text query explode: true required: false schema: type: string responses: '200': description: Ok /einfo.fcgi: get: tags: - einfo summary: Provides a list of the names of all valid Entrez databases or Provides statistics for a single database description: Provides a list of the names of all valid Entrez databases or when given a database, provides database statistics including lists of indexing fields and available link names #operationID: esummary has this field but einfo does not - may be why it is not working parameters: - name: db in: query description: target database about which to gather statistics explode: false required: false schema: type: string - name: version in: query description: Used to specify version 2.0 EInfo XML. The only supported value is \u20182.0\u2019. explode: false required: false schema: type: string example: link: summary: \"See detailed information about version parametmer with respect to EInfo\" externalValue: https://github.com/jenpetsmit/eutilities/blob/main/eutils/einfo.md security: - api_key: [] responses: '200': description: Ok /elink.fcgi: get: tags: - elink summary: Retrieves UIDs for related or linked records, or LinkOut URLs. description: Provides a list of the names of all valid Entrez databases or when given a database, provides database statistics including lists of indexing fields and available link names parameters: - name: db in: query description: Target database from which to retrieve UIDs. This is the origin database of the link operation. If db and dbfrom are set to the same database value, then ELink will return computational neighbors within that database. explode: true required: false schema: type: string - name: dbfrom in: query description: Source database with the input UIDs explode: false required: true schema: type: string - name: cmd in: query description: ELink command mode explode: false required: true schema: type: array items: type: string enum: # enum restricts to specific values - neighbor - neighbor_score - neighbot_history - acheck - ncheck - lcheck - llinks - llinkslib - prlinks - name: id in: query description: A single UID or a comma-separated UID list from the same database (dbfrom) explode: true required: false schema: type: string example: https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=nuccore&db=nuccore&id=34577062 - $ref: '#/components/parameters/query_key' - $ref: '#/components/parameters/WebEnv' - $ref: '#/components/parameters/retmode' - $ref: '#/components/parameters/idtype' # add this to components - $ref: '#/components/parameters/linkname' # add this to components - $ref: '#/components/parameters/term' - name: holding in: query description: Only URLs for the LinkOut provider specified by holding will be returned. The value provided to holding should be the abbreviation of the LinkOut provider's name found in the <NameAbbr> tag of the ELink XML output when cmd is set to llinks or llinkslib. The holding parameter only functions when cmd is set to llinks or llinkslib. explode: true required: false schema: type: string - $ref: '#/components/parameters/datetype' - $ref: '#/components/parameters/reldate' - $ref: '#/components/parameters/mindate' - $ref: '#/components/parameters/maxdate' responses: '200': description: \"200 response It works\" content: # Response body application/xml: schema: type: object properties: id: type: string /espell.fcgi: get: tags: - espell summary: Retrieves UIDs for related or linked records, or LinkOut URLs. description: Provides a list of the names of all valid Entrez databases or when given a database, provides database statistics... parameters: - name: db in: query description: Target database to search explode: true required: true schema: type: string - name: term in: query description: Entrez text query... explode: true required: true schema: type: string responses: '200': description: Successful response with spelling suggestions content: application/xml: schema: type: object properties: spelling: type: string description: Suggested spelling application/json: schema: type: object properties: spelling: type: string description: Suggested spelling /ecitmatch.fcgi: get: tags: - ecitmatch summary: Retrieves PubMed IDs (PMIDs) that correspond to a set of input citation strings. description: Retrieves PubMed IDs (PMIDs) that correspond to a set of input citation strings. parameters: - name: db in: query description: Target database to search. The only supported value is pubmed. Example db=pubmed explode: true required: true schema: type: string enum: - pubmed - name: rettype in: query description: ERetrieval type. The only supported value is \u2018xml\u2019. example retye=xml explode: true required: true schema: type: string - name: bdata in: query description: Citation strings. Each input citation must be represented by a citation string in the following format- journal_title|year|volume|first_page|author_name|your_key| explode: true required: true schema: type: string responses: '200': description: 200 response It works '401': description: database must be pubmed, example, db=pubmed components: parameters: db: name: database in: query description: the abbreviated name of the NCBI database to be queried. required: false explode: true schema: type: string term: name: term in: query description: the term or phrase for which to search required: true explode: true schema: type: string usehistory: name: Use history in: query description: saves results to history server required: false explode: true schema: type: string WebEnv: name: Web Environment in: query description: saved session string from esearch, epost, or elink required: false explode: false schema: type: string query_key: name: Query key in: query description: integer query key returned by previouse esearch, epost, or elink required: false explode: false schema: type: integer retmax: name: Retrival maximum in: query description: Total number of UIDs from the retrieved set to be shown in the XML output (default=20). By default, ESearch only includes the first 20 UIDs retrieved in the XML output. If usehistory is set to 'y', the remainder of the retrieved set will be stored on the History server; otherwise these UIDs are lost. Increasing retmax allows more of the retrieved UIDs to be included in the XML output, up to a maximum of 10,000 records. required: false explode: false schema: type: string retstart: name: Retrival start UID in: query description: Sequential index of the first UID in the retrieved set to be shown in the XML output (default=0, corresponding to the first record of the entire set). This parameter can be used in conjunction with retmax to download an arbitrary subset of UIDs retrieved from a search. required: false explode: false schema: type: integer rettype: name: Retrival Type in: query description: Specifies the type of return but options vary by database, for example flat file, FASTA, EST, or accession, abstract or MEDLINE from PubMed, or GenPept or FASTA from protein. See the Parameters web page for a comlete list. explode: false schema: type: string retmode: name: Retrival mode in: query description: Determines the format of the returned output. The default value is xml for ESearch XML; json is also supported to return output in JSON format; efetch supports remode-text. explode: false schema: type: string sort: name: Retrival mode in: query description: Specifies the method used to sort UIDs in the ESearch output. required: false explode: false schema: type: array items: type: string enum: - pub_date - Author - JournalName - relevance strand: name: strand in: query description: Strand of DNA to retrieve. Available values are \"1\" for the plus strand and \"2\" for the minus strand. required: false explode: false schema: type: integer example: db=nuccore&id=21614549&strand=1&seq_start=1&seq_stop=100&rettype=fasta&retmode=text seq_start: name: sequence start in: query description: First sequence base to retrieve. The value should be the integer coordinate of the first desired base, with \"1\" representing the first base of the sequence. required: false explode: false schema: type: integer example: db=nuccore&id=21614549&strand=1&seq_start=1&seq_stop=100&rettype=fasta&retmode=text seq_stop: name: seq_stop # in: query description: Last sequence base to retrieve. The value should be the integer coordinate of the last desired base, with \"1\" representing the first base of the sequence. schema: type: integer example: db=nuccore&id=21614549&strand=1&seq_start=1&seq_stop=100&rettype=fasta&retmode=text complexity: name: complexity in: query description: | Complexity of sequence: - 0: entire blob - 1: bioseq - 2: minimal bioseq-set - 3: minimal nuc-prot - 4: minimal pub-set schema: type: string enum: - 0 - 1 - 2 - 3 - 4 version: name: version in: query required: false description: Used to specify version 2.0 ESummary XML. When present, ESummary will return version 2.0 DocSum XML that is unique to each Entrez database and that often contains more data than the default DocSum XML. schema: type: string example: https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=11850928,11482001&version=2.0 idtype: name: idtype in: query required: false description: Specifies the type of identifier to return for sequence databases (nuccore, popset, protein). By default, ELink returns GI numbers in its output. If idtype is set to \u2018acc\u2019, ELink will return accession.version identifiers rather than GI numbers. schema: type: string linkname: name: linkname in: query required: false explode: false description: Name of the Entrez link to retrieve. Every link in Entrez is given a name of the form dbfrom_db_subset schema: type: string example: Find snps with genotype data linked to genes. https://eutils.ncbi.nlm.nih.gov/entrez/eutils/elink.fcgi?dbfrom=gene&db=snp&id=93986&linkname=gene_snp_genegenotype datetype: name: datetype in: query required: false explode: false description: Type of date used to limit a link operation. The allowed values vary between Entrez databases, but common values are 'mdat' (modification date), 'pdat' (publication date) and 'edat' (Entrez date). Generally an Entrez database will have only two allowed values for datetype. schema: type: string reldate: name: reldate in: query required: false explode: false description: When reldate is set to an integer n, ELink returns only those items that have a date specified by datetype within the last n days. schema: type: string mindate: name: mindate in: query required: false explode: false description: Beginning of date range used to limit a link operation by the date specified by datetype. Mindate and maxdate must be used together to specify an arbitrary date range. The general date format is YYYY/MM/DD, and these variants are also allowed - YYYY, YYYY/MM. schema: type: string maxdate: name: maxdate in: query required: false explode: false description: End of date range used to limit a link operation by the date specified by datetype. Mindate and maxdate must be used together to specify an arbitrary date range. The general date format is YYYY/MM/DD, and these variants are also allowed- YYYY, YYYY/MM. schema: type: string responses: 205: description: all good IllegalInput: description: Illegal input for operation. GeneralError: description: General Error MissingParameter: description: Either usehistory, query_key, retmax 405: description: Invalid status value content: application/xml: schema: type: array items: enum: - placed - approved - delivered securitySchemes: api_key: description: Only needed if access to E-Utilities is more than three requests per second. Users can get an API key from their NCBI account, from the Settings page. type: apiKey name: api_key in: header","title":"eutils.yml"}]}